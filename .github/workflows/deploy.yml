name: Deploy

on:
  push:
    tags:
      - '*' # Push events to every tag not containing /
  workflow_dispatch:

env:
  REGISTRY: ghcr.io

permissions: read-all

jobs:
  publish_images:
    if: ${{ github.ref_type == 'tag' }}
    runs-on: ubuntu-latest
    permissions:
      packages: write
    outputs:
      tag: ${{ steps.prep.outputs.tag }}
    steps:
      - name: Prepare
        id: prep
        run: |
          REPO=${GITHUB_REPOSITORY,,}
          IMAGE=${{ env.REGISTRY }}/${REPO}
          SHA=${GITHUB_SHA::7}
          TAG=${GITHUB_REF#refs/*/}
          echo "image_name=${IMAGE}" >> $GITHUB_OUTPUT
          echo "sha=${SHA}" >> $GITHUB_OUTPUT
          echo "tag=${TAG}" >> $GITHUB_OUTPUT
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish Image
        run: |
          docker pull ${{ steps.prep.outputs.image_name }}:${{ steps.prep.outputs.sha }}
          docker tag ${{ steps.prep.outputs.image_name }}:${{ steps.prep.outputs.sha }} ${{ steps.prep.outputs.image_name }}:${{ steps.prep.outputs.tag }}
          docker push ${{ steps.prep.outputs.image_name }}:${{ steps.prep.outputs.tag }}

  deploy:
    needs: ['publish_images']
    environment:
      name: production
    runs-on:
      - self-hosted
      - cloudboost
      - us-west-2
      - linux
      - aws
    steps:
      - uses: actions/checkout@v5
      # needed for terraform fmt
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
      - uses: opentofu/setup-opentofu@v1
        with:
          tofu_version_file: .opentofu-version
      - name: Terraform Init
        run: make _tfinit
      - name: Terraform Plan
        env:
          TF_VAR_image_tag: ${{ needs.publish_images.outputs.tag }}
        run: make _tfplan
      - name: Terraform Apply
        run: make _tfapply
