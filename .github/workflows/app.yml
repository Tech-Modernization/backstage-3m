name: App

on:
  push:
    branches:
      - main
    paths-ignore:
      - "**.md"
  pull_request:
    types: [opened, reopened, synchronize]
    branches:
      - main
    paths-ignore:
      - "**.md"
      - "infra/**"
      - ".terraform-version"
      - ".github/workflows/infra.yml"

env:
  REGISTRY: ghcr.io

permissions: read-all

jobs:
  app:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      CI: true
    steps:
      - uses: actions/checkout@v3
      - name: Setup node
        id: node
        uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"
      - name: yarn install
        uses: backstage/actions/yarn-install@v0.6.17
        with:
          cache-prefix: ${{ runner.os }}-${{ steps.node.outputs.node-version }}
      - run: make envfile _clean envfile
      - run: make _fmt
      - run: make _lint
      - run: make _tsc
      - run: make _test
      - run: make _build
      - name: Prepare
        id: prep
        run: |
          REPO=${GITHUB_REPOSITORY,,}
          IMAGE=${{ env.REGISTRY }}/${REPO}
          TAG=${GITHUB_SHA::7}
          echo "tagged_image=${IMAGE}:${TAG}" >> $GITHUB_OUTPUT
          echo "tag=${TAG}" >> $GITHUB_OUTPUT
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Build production image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./packages/backend/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.prep.outputs.tagged_image }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          sbom: true
          provenance: true
